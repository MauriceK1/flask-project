name: Deploy

on: 
  workflow_run:
    workflows: ["Run Tests"]
    branches: [main]
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy:
    name: "Deploy to VPS"
    runs-on: ubuntu-latest
    steps:
      - name: Check if Tests Failed
        if: ${{ github.event.workflow_run.conclusion == 'failure' }}
        run: exit 1

      #- name: Force Failure
      #  run: exit 1

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy-key.pem
          chmod 600 ~/.ssh/deploy-key.pem
          cat >> ~/.ssh/config <<END
          Host my-vps
            HostName $SSH_IP
            User $SSH_USER
            IdentityFile ~/.ssh/deploy-key.pem
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_IP: ${{ secrets.SSH_IP }}

      - name: Deploy site
        run: ssh my-vps '~/redeploy-site.sh && docker ps >> redeployment_logs.txt && cat redeployment_logs.txt && curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš€ Deployment Successful"'
            #Alternative method of SSH used instead of conf file since it was not initially working
        
            #cd ~/.ssh
            #ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_IP }} -i deploy-key.pem -o StrictHostKeyChecking=no 'cd ${{ secrets.PROJECT_ROOT }} && pwd'
      
      - name: Failure to Deploy Site
        if: ${{ failure() }} 
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš¨ Deployment Failed"

          #- name: Failure to Deploy Site
          #if: ${{ failure() }}
          #run: ssh my-vps 'curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš¨ Deployment Failed"'
